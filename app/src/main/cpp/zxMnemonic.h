//
// Created by Сергей on 08.09.2019.
//

#pragma once

enum MnemonicStd {
    NOP = 0, LD_BC_NN, LD_PBC_A, INC_BC, INC_B, DEC_B, LD_B_N, RLCA, EX_AF, ADD_HL_BC, LD_A_PBC, DEC_BC, INC_C, DEC_C,
    LD_C_N, RRCA, DJNZ, LD_DE_NN, LD_PDE_A, INC_DE, INC_D, DEC_D, LD_D_N, RLA, JR_N, ADD_HL_DE, LD_A_PDE, DEC_DE, INC_E, DEC_E,
    LD_E_N, RRA, JR_NZ, LD_HL_NN, LD_PNN_HL, INC_HL, INC_H, DEC_H, LD_H_N, DAA, JR_Z, ADD_HL_HL, LD_HL_PNN, DEC_HL, INC_L,
    DEC_L, LD_L_N, CPL, JR_NC, LD_SP_NN, LD_PNN_A, INC_SP, INC_PHL, DEC_PHL, LD_PHL_N, SCF, JR_C, ADD_HL_SP, LD_A_PNN, DEC_SP,
    INC_A, DEC_A, LD_A_N, CCF,/*64*/
    LD_B_B, LD_B_C, LD_B_D, LD_B_E, LD_B_H, LD_B_L, LD_B_PHL, LD_B_A, LD_C_B, LD_C_C, LD_C_D, LD_C_E,
    LD_C_H, LD_C_L, LD_C_PHL, LD_C_A, LD_D_B, LD_D_C, LD_D_D, LD_D_E, LD_D_H, LD_D_L, LD_D_PHL, LD_D_A, LD_E_B, LD_E_C,
    LD_E_D, LD_E_E, LD_E_H, LD_E_L, LD_E_PHL, LD_E_A, LD_H_B, LD_H_C, LD_H_D, LD_H_E, LD_H_H, LD_H_L, LD_H_PHL,
    LD_H_A, LD_L_B, LD_L_C, LD_L_D, LD_L_E, LD_L_H, LD_L_L, LD_L_PHL, LD_L_A, LD_PHL_B, LD_PHL_C, LD_PHL_D, LD_PHL_E,
    LD_PHL_H, LD_PHL_L, HALT, LD_PHL_A, LD_A_B, LD_A_C, LD_A_D, LD_A_E, LD_A_H, LD_A_L, LD_A_PHL, LD_A_A,/*128*/
    ADD_A_B, ADD_A_C, ADD_A_D, ADD_A_E, ADD_A_H, ADD_A_L, ADD_A_PHL, ADD_A_A,
    ADC_A_B, ADC_A_C, ADC_A_D, ADC_A_E, ADC_A_H, ADC_A_L, ADC_A_PHL, ADC_A_A,
    SUB_B, SUB_C, SUB_D, SUB_E, SUB_H, SUB_L, SUB_PHL, SUB_A,
    SBC_A_B, SBC_A_C, SBC_A_D, SBC_A_E, SBC_A_H, SBC_A_L, SBC_A_PHL, SBC_A_A,
    AND_B, AND_C, AND_D, AND_E, AND_H, AND_L, AND_PHL, AND_A,
    XOR_B, XOR_C, XOR_D, XOR_E, XOR_H, XOR_L, XOR_PHL, XOR_A,
    OR_B, OR_C, OR_D, OR_E, OR_H, OR_L, OR_PHL, OR_A,
    CP_B, CP_C, CP_D, CP_E, CP_H, CP_L, CP_PHL, CP_A,/* 192 */
    RET_NZ, POP_BC, JP_NZ, JP_NN, CALL_NZ, PUSH_BC, ADD_A_N, RST0, RET_Z, RET, JP_Z, PREF_CB, CALL_Z, CALL_NN, ADC_A_N, RST8, RET_NC,
    POP_DE, JP_NC, OUT_PN_A, CALL_NC, PUSH_DE, SUB_N, RST16, RET_C, EXX, JP_C, IN_A_PN, CALL_C, PREF_DD, SBC_A_N, RST24, RET_PO,
    POP_HL, JP_PO, EX_PSP_HL, CALL_PO, PUSH_HL, AND_N, RST32, RET_PE, JP_HL, JP_PE, EX_DE_HL, CALL_PE, PREF_ED, XOR_N, RST40, RET_P,
    POP_AF, JP_P, DI, CALL_P, PUSH_AF, OR_N, RST48, RET_M, LD_SP_HL, JP_M, EI, CALL_M, PREF_FD, CP_N, RST56,
};

enum MnemonicCB {
    RLC_B = 0, RLC_C, RLC_D, RLC_E, RLC_H, RLC_L, RLC_PHL, RLC_A,
    RRC_B, RRC_C, RRC_D, RRC_E, RRC_H, RRC_L, RRC_PHL, RRC_A,
    RL_B, RL_C, RL_D, RL_E, RL_H, RL_L, RL_PHL, RL_A,
    RR_B, RR_C, RR_D, RR_E, RR_H, RR_L, RR_PHL, RR_A,
    SLA_B, SLA_C, SLA_D, SLA_E, SLA_H, SLA_L, SLA_PHL, SLA_A,
    SRA_B, SRA_C, SRA_D, SRA_E, SRA_H, SRA_L, SRA_PHL, SRA_A,
    SLI_B, SLI_C, SLI_D, SLI_E, SLI_H, SLI_L, SLI_PHL, SLI_A,
    SRL_B, SRL_C, SRL_D, SRL_E, SRL_H, SRL_L, SRL_PHL, SRL_A,
    BIT_0_B, BIT_0_C, BIT_0_D, BIT_0_E, BIT_0_H, BIT_0_L, BIT_0_PHL, BIT_0_A,
    BIT_1_B, BIT_1_C, BIT_1_D, BIT_1_E, BIT_1_H, BIT_1_L, BIT_1_PHL, BIT_1_A,
    BIT_2_B, BIT_2_C, BIT_2_D, BIT_2_E, BIT_2_H, BIT_2_L, BIT_2_PHL, BIT_2_A,
    BIT_3_B, BIT_3_C, BIT_3_D, BIT_3_E, BIT_3_H, BIT_3_L, BIT_3_PHL, BIT_3_A,
    BIT_4_B, BIT_4_C, BIT_4_D, BIT_4_E, BIT_4_H, BIT_4_L, BIT_4_PHL, BIT_4_A,
    BIT_5_B, BIT_5_C, BIT_5_D, BIT_5_E, BIT_5_H, BIT_5_L, BIT_5_PHL, BIT_5_A,
    BIT_6_B, BIT_6_C, BIT_6_D, BIT_6_E, BIT_6_H, BIT_6_L, BIT_6_PHL, BIT_6_A,
    BIT_7_B, BIT_7_C, BIT_7_D, BIT_7_E, BIT_7_H, BIT_7_L, BIT_7_PHL, BIT_7_A,
    RES_0_B, RES_0_C, RES_0_D, RES_0_E, RES_0_H, RES_0_L, RES_0_PHL, RES_0_A,
    RES_1_B, RES_1_C, RES_1_D, RES_1_E, RES_1_H, RES_1_L, RES_1_PHL, RES_1_A,
    RES_2_B, RES_2_C, RES_2_D, RES_2_E, RES_2_H, RES_2_L, RES_2_PHL, RES_2_A,
    RES_3_B, RES_3_C, RES_3_D, RES_3_E, RES_3_H, RES_3_L, RES_3_PHL, RES_3_A,
    RES_4_B, RES_4_C, RES_4_D, RES_4_E, RES_4_H, RES_4_L, RES_4_PHL, RES_4_A,
    RES_5_B, RES_5_C, RES_5_D, RES_5_E, RES_5_H, RES_5_L, RES_5_PHL, RES_5_A,
    RES_6_B, RES_6_C, RES_6_D, RES_6_E, RES_6_H, RES_6_L, RES_6_PHL, RES_6_A,
    RES_7_B, RES_7_C, RES_7_D, RES_7_E, RES_7_H, RES_7_L, RES_7_PHL, RES_7_A,
    SET_0_B, SET_0_C, SET_0_D, SET_0_E, SET_0_H, SET_0_L, SET_0_PHL, SET_0_A,
    SET_1_B, SET_1_C, SET_1_D, SET_1_E, SET_1_H, SET_1_L, SET_1_PHL, SET_1_A,
    SET_2_B, SET_2_C, SET_2_D, SET_2_E, SET_2_H, SET_2_L, SET_2_PHL, SET_2_A,
    SET_3_B, SET_3_C, SET_3_D, SET_3_E, SET_3_H, SET_3_L, SET_3_PHL, SET_3_A,
    SET_4_B, SET_4_C, SET_4_D, SET_4_E, SET_4_H, SET_4_L, SET_4_PHL, SET_4_A,
    SET_5_B, SET_5_C, SET_5_D, SET_5_E, SET_5_H, SET_5_L, SET_5_PHL, SET_5_A,
    SET_6_B, SET_6_C, SET_6_D, SET_6_E, SET_6_H, SET_6_L, SET_6_PHL, SET_6_A,
    SET_7_B, SET_7_C, SET_7_D, SET_7_E, SET_7_H, SET_7_L, SET_7_PHL, SET_7_A,
};

enum MnemonicED {
    IN_B_BC = 64, OUT_PC_B, SBC_HL_BC, LD_PNN_BC, NEG, RETN, IM0, LD_I_A, IN_C_BC, OUT_PC_C, ADC_HL_BC, LD_BC_PNN, NEG_1, RETI,
    IM0_1, LD_R_A, IN_D_BC, OUT_PC_D, SBC_HL_DE, LD_PNN_DE, NEG_2, RETN_1, IM1, LD_A_I, IN_E_BC, OUT_PC_E, ADC_HL_DE, LD_DE_PNN,
    NEG_3, RETI_1, IM2, LD_A_R, IN_H_BC, OUT_PC_H, SBC_HL_HL, LD_PNN_HL1, NEG_4, RETN_2, IM0_2, RRD, IN_L_BC, OUT_PC_L, ADC_HL_HL,
    LD_HL1_PNN, NEG_5, RETI_2, IM0_3, RLD, IN_F_PC, OUT_PC_0, SBC_HL_SP, LD_PNN_SP, NEG_6, RETN_3, IM1_1, RRD_1, IN_A_BC, OUT_PC_A,
    ADC_HL_SP, LD_SP_PNN, NEG_7, RETI_3, IM2_1, RLD_1, LDI = 160, CPI, INI, OUTI, LDD = 168, CPD, IND, OUTD,
    LDIR = 176, CPIR, INIR, OTIR, LDDR = 184, CPDR, INDR, OTDR
};
// INC PNN
// DEC PNN
// ADD PNN, N
// ADD PNN, NN
// SUB PNN, N
// SUB PNN, NN
// ADD PNN, RP
// SUB PNN, RP
// ADD PNN, R
// SUB PNN, R
// ADD RP, PNN
// ADD R, PNN
// SUB RP, PNN
// SUB R, PNN

